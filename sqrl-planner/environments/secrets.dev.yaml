# This is an example of a DECRYPTED secrets.yaml file. Use this file just as
# you would use a values.yaml file. The only difference is that you should
# use helm-secrets to encrypt this file before committing it to your repository.
#
# Use this file as a template for production and staging secrets.yaml files.

mongodb:
  auth:
    # The MongoDB root user is used to create the database and user for each
    # service. The root user is not used by the services but is useful for
    # debugging and maintenance.
    rootUser: root
    rootPassword: root_password
    # Create a user and database for each service.
    usernames: [gator_app, sqrl_server]
    passwords: [gator_app_password, sqrl_server_password]
    databases: [gator, sqrl]

# We use a separate MongoDB database for each service. While this is not
# required, it ensures that there is no data leakage / name collisions
# between the two services. A separate user is also created for each
# service to make it easy to manage access to MongoDB instance.

# The secret keys are used to sign security-sensitive data. Each service
# should have its own unique secret key. You should generate a new secret
# key (that is at least 32 characters long) before deploying to production.

global:
  config:
    MONGODB_AUTH_SOURCE: admin

gator-app:
  secrets:
    MONGODB_USERNAME: gator_app
    MONGODB_PASSWORD: gator_app_password
    SECRET_KEY: secret_key-gator-app
  config:
    MONGODB_DB: gator

sqrl-server:
  secrets:
    MONGODB_USERNAME: sqrl_server
    MONGODB_PASSWORD: sqrl_server_password
    SECRET_KEY: secret_key-sqrl-server
  config:
    MONGODB_DB: sqrl
